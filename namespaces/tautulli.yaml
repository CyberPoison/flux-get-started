apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    field.cattle.io/creatorId: user-gj778
    field.cattle.io/publicEndpoints: '[{"addresses":["195.201.196.53"],"port":32049,"protocol":"TCP","serviceName":"tautulli:tautulli-nodeport","allNodes":true},{"addresses":["195.201.196.53"],"port":443,"protocol":"HTTPS","serviceName":"tautulli:ingress-a562345d3a152a8d0ba1466b96914643","ingressName":"tautulli:tautulli","hostname":"tautulli.blackdragon.tv","allNodes":true}]'
  creationTimestamp: null
  generation: 1
  labels:
    cattle.io/creator: norman
    workload.user.cattle.io/workloadselector: deployment-tautulli-tautulli
  name: tautulli
  selfLink: /apis/apps/v1/namespaces/tautulli/deployments/tautulli
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: deployment-tautulli-tautulli
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cattle.io/timestamp: "2020-05-27T22:02:02Z"
        field.cattle.io/ports: '[[{"containerPort":8181,"dnsName":"tautulli-nodeport","hostPort":0,"kind":"NodePort","name":"8181tcp01","protocol":"TCP","sourcePort":0}]]'
      creationTimestamp: null
      labels:
        workload.user.cattle.io/workloadselector: deployment-tautulli-tautulli
    spec:
      containers:
      - env:
        - name: PGID
          value: "1000"
        - name: PUID
          value: "1000"
        - name: TZ
          value: Europe/London
        image: linuxserver/tautulli:develop
        imagePullPolicy: Always
        name: tautulli
        ports:
        - containerPort: 8181
          name: 8181tcp01
          protocol: TCP
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities: {}
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: false
        stdin: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        tty: true
        volumeMounts:
        - mountPath: /config
          name: vol1
        - mountPath: /logs
          name: vol2
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - hostPath:
          path: /opt/appdata/tautulli/config
          type: ""
        name: vol1
      - hostPath:
          path: /opt/appdata/tautulli/logs
          type: ""
        name: vol2
status: {}
